// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  intraId      String?      @unique @default(uuid())
  displayname  String?      @default("anon")
  username     String       @unique
  picture      String?      @default("https://images.unsplash.com/photo-1521985429101-21bed8b75e47?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80")
  status       String?      @default("offline")
  wins         Int?         @default(0)
  losses       Int?         @default(0)
  twoFAEnabled Boolean?     @default(false)
  twoFASecret  String?      @unique
  isSender     Friendship[] @relation("send")
  isReceiver   Friendship[] @relation("receive")

  @@map("users")
}

model Friendship {
  id       Int    @id @default(autoincrement())
  user1    User   @relation("send", fields: [sender], references: [username], onDelete: Cascade)
  sender   String
  user2    User   @relation("receive", fields: [receiver], references: [username], onDelete: Cascade)
  receiver String

  @@map("friendships")
}


model Message {
	id Int @id @default(autoincrement())
	author String
	authorUID String
	messageText String
	room Chatroom @relation(fields: [roomId], references: [id])
	roomId Int
	@@map("message")
} 

model Chatroom {
 	id			Int  		@id  @default(autoincrement())
 	admin		String
 	name		String
	protected	Boolean
	password    String
	visibility 	Boolean
	messages	Message[] @relation()
	@@map("chatroom")
}

